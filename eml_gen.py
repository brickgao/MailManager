#!/usr/bin/env python2
'''This script is used to convert emails in db into .eml files.

WARNING: NO EXCEPTION HANDLING in this script NOW !!!
'''
__author__="Xiami"
__version__ = "0.1.0"
__email__ = "i@f2light.com"
__status__ = "Development"

from con_db import con_db
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
from email.header import Header
import os
import os.path
import stat

def save_to_eml(obj, filepath):
	eml_obj = MIMEMultipart()

	# Headers
	eml_obj['Subject'] = obj['subject']
	eml_obj['From'] = obj['from_address']
	eml_obj['To'] = obj['to_address']
	eml_obj['Received'] = ";" + str(obj['receive_date'])
	eml_obj['Date'] = str(obj['send_data'])

	# Body
	text = MIMEText(obj['body'], "html", "UTF-8")
	eml_obj.attach(text)

	# Attachments
	for att in obj['attachments']:
		filename = att['name']

		# Put file's data
		if att['exist'] == True:
			fp = open(att['path'])
			attdata = fp.read()
			fp.close()
		else:
			attdata = ""
			filename += '.not.exist'

		attobj = MIMEApplication(attdata)
		attobj.add_header('Content-Disposition', 'attachment', filename=(Header(filename, 'utf-8').encode()))
		eml_obj.attach(attobj)

	# Write to .eml file
	fp = open(filepath, "w")
	fp.write(eml_obj.as_string())
	fp.close()

def save_all_emails_from_list(emails, dir_base):
	'''save_all_emails(emails, dir_base) -> void

	   emails is a list generated by con_db.con_db.get_mail_list function.
	   dir_base is a directory to store all the emails.

	   !! IMPORTANT
	   dir_base must be ended with '/'.
	'''
	# Check if dir_base exists
	if os.path.exists(dir_base) == False:
		os.mkdir(dir_base)
#	elif stat.S_ISDIR(os.stat(dir_base).st_mode) == False:
#		print "ERROR!"
#		return 0

	for i in emails:
		save_to_eml(i, dir_base + i['subject'].replace(' ', '.') + ".eml")

def save_all_emails_from_db(email_db, dir_base):
	'''save_all_emails(email_db, dir_base) -> void

	   email_db must be a file that can be accepted by con_db.
	   dir_base is a directory to store all the emails.

	   !! IMPORTANT
	   dir_base must be ended with '/'.

	   e.g.:
	     save_all_emails('mailstore.a@gmail.com.db', '/home/abc/')
	'''
	dbConn = con_db(email_db)
	mails = dbConn.get_mail_list()

	save_all_emails_from_list(mails, dir_base)

if __name__=='__main__':
	save_all_emails_from_db('com.google.android.gm/databases/mailstore.funssuse@gmail.com.db', '/home/xiami/abcd/')
